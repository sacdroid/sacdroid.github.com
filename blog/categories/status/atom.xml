<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: status | Techno]]></title>
  <link href="http://sacdroid.github.com/blog/categories/status/atom.xml" rel="self"/>
  <link href="http://sacdroid.github.com/"/>
  <updated>2012-07-26T20:50:54-04:00</updated>
  <id>http://sacdroid.github.com/</id>
  <author>
    <name><![CDATA[Sachin Patil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scrolling pidgin status message]]></title>
    <link href="http://sacdroid.github.com/blog/2010/01/01/scrolling-pidgin-status-message/"/>
    <updated>2010-01-01T14:15:00-05:00</updated>
    <id>http://sacdroid.github.com/blog/2010/01/01/scrolling-pidgin-status-message</id>
    <content type="html"><![CDATA[<div class='post'>
With continuation to my earlier <a href="http://www.sachystechnoworld.co.cc/2009/12/tell-your-friends-how-many-seconds-are.html">trick</a>, I wrote another script this time in python to animate pidgin status like a news scroller on the bottom of the news channel, you can put whatever message you want.<br /><br /><script type="syntaxhighlighter" class="brush: py">&lt;![CDATA[<br /><br />#!/usr/bin/env python<br /><br />import os, sys, dbus, re<br />from random import randint<br />import time<br /><br />msg =  "Happy New Year 2010"  #change this to your status message<br /><br />program = os.path.basename(sys.argv[0])<br />from_file = 0<br />ICON = u'\u21e8 '                 # rightwards white arrow<br /><br />bus = dbus.SessionBus()<br />obj = bus.get_object("im.pidgin.purple.PurpleService", "/im/pidgin/purple/PurpleObject")<br />purple = dbus.Interface(obj, "im.pidgin.purple.PurpleInterface")<br /><br /><br />def pidgin_status(message):<br /> old_status = purple.PurpleSavedstatusGetCurrent()  # get current status<br /> status_type = purple.PurpleSavedstatusGetType(old_status) # get current status type<br /> new_status = purple.PurpleSavedstatusNew("", status_type) # create new status with old status type<br /> purple.PurpleSavedstatusSetMessage(new_status, message) # fill new status with status message<br /> purple.PurpleSavedstatusActivate(new_status)   # activate new status<br /><br /><br />i = 0<br />while True:<br />  ticker_text = msg[i:i+19] +"  " + msg[0:i]<br />  pidgin_status(ticker_text)<br />  i +=1<br />  if i == 19:<br />     i = 0<br />  time.sleep(1)<br /> <br />]]&gt;</script><br /><br />Have fun...<br /><br />Thanks,<br /><br />-- Sachin</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tell your friends how many seconds are left in the decade]]></title>
    <link href="http://sacdroid.github.com/blog/2009/12/30/tell-your-friends-how-many-seconds-are/"/>
    <updated>2009-12-30T11:12:00-05:00</updated>
    <id>http://sacdroid.github.com/blog/2009/12/30/tell-your-friends-how-many-seconds-are</id>
    <content type="html"><![CDATA[<div class='post'>
I got this idea from <a href="http://www.itpro.co.uk/618784/google-counting-down-the-seconds-till-the-new-year">goggle new year seconds counter</a>, I decided to set my pidgin status to showing seconds are left in the decade.<br /> After bit of goggling found a command-line program called purple-remote that allows me to automatically update the Pidgin status and message lines. The purple-remote program is included in the libpurple-bin package, make sure you have it installed.<br /><br /><pre name="code" class="cpp"><br />sachin@sachin-laptop:~/Utility$ sudo apt-get install libpurple-bin<br /></pre><br />Here is small script that does this trick.<br /><pre name="code" class="cpp"><br />sachin@sachin-laptop:~/Utility$ gedit hny.sh<br /></pre><br />add text as follows:<br /><script type="syntaxhighlighter" class="brush: py">&lt;![CDATA[<br />#!/bin/bash<br />START=$(date --date='2010-01-01 00:00:00' +%s)<br />END=$(date +%s)<br /><br />DIFF=$(( $START - $END ))<br /><br />if [ $DIFF -lt 0 ]; then<br />  msg="Happy New Year 2010"<br />else<br />  msg="$DIFF seconds to 2010"<br />fi<br /><br />echo ${msg}<br />/usr/bin/purple-remote "setstatus?status=available&message=${msg}"<br />]]&gt;</script><br />Save and make it executable as follows:<br /><br /><pre name="code" class="cpp"><br />sachin@sachin-laptop:~/Utility$ chmod +x hny.sh<br /></pre><br />time to run script every second with watch command.<br /><pre name="code" class="cpp"><br />sachin@sachin-laptop:~/Utility$ watch -n 1 ./hny.sh<br /></pre><br /><br />DONE!!!<br /><br />Screenshot:<br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_A2_wLwXdBek/SzuIodeQimI/AAAAAAAACuk/U_DcOcz-GEA/s1600-h/hny.jpg"><img style="cursor:pointer; cursor:hand;width: 291px; height: 320px;" src="http://3.bp.blogspot.com/_A2_wLwXdBek/SzuIodeQimI/AAAAAAAACuk/U_DcOcz-GEA/s320/hny.jpg" border="0" alt=""id="BLOGGER_PHOTO_ID_5421076805158210146" /></a><br /><br />HAPPY NEW YEAR to all.<br /><br />Update:<br />after few requests I am writng cross platform utility which will do this trick:<br /><script type="syntaxhighlighter" class="brush: java">&lt;![CDATA[<br />import java.text.SimpleDateFormat;<br />import java.util.Date;<br /><br />import org.jivesoftware.smack.XMPPConnection;<br />import org.jivesoftware.smack.packet.Presence;<br /><br />public class Test {<br /><br /> public static void main(String args[]) {<br />  XMPPConnection connection = new XMPPConnection("gmail.com");<br /><br />  Date date;<br />  try {<br />   SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yy");<br />   date = (Date) formatter.parse("01-JAN-10");<br /><br />   connection.connect();<br />   connection.login("yourgmail@gmail.com", "password");<br />   Presence presence = new Presence(Presence.Type.available);<br />   while (true) {<br />    Date today = new Date();<br />    long diff = date.getTime() - today.getTime();<br /><br />    presence.setStatus((diff / (1000)) + " seconds to 2010");<br />    presence.setPriority(24);<br />    presence.setMode(Presence.Mode.available);<br />    connection.sendPacket(presence);<br />    Thread.sleep(1000); // Sleeps for 1 seconds<br />   }<br />  } catch (Exception e) {<br />   System.out.println(e.toString());<br />  }<br /> }<br />}<br /><br />]]&gt;</script><br /><br /> You need to get the Smack API which is an open source, pure Java library for working with XMPP (clients only). The API can be downloaded from <a href=" http://www.igniterealtime.org/downloads/index.jsp">smack</a>, .Just download the appropriate libraries and put the JAR files in your classpath. If you canâ€™t figure out how it is done, please Google your way around.<br /><br />Enjoy...</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>pravin</div>
<div class='content'>
Superb Yaar!!!</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
